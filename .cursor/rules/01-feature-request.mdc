# Guide for Product Requirements Documents (PRDs)

## üéØ PRD Structure and Templates

When working with Product Requirements Documents, use the appropriate template based on the use case:

### üìÅ Available Templates
- **`PRDs/templates/new-bc-XXX.md`**: For new bounded contexts (complete projects)
- **`PRDs/templates/new-feature-YYY-bc-XXX.md`**: For new features in existing BCs
- **`PRDs/templates/improve-bc-XXX.md`**: For improving existing BCs

### üìö Examples for Reference
- **`PRDs/examples/new-bc-ecommerce.md`**: Complete e-commerce project example
- **`PRDs/examples/new-feature-notifications-bc-auth.md`**: Notifications feature example
- **`PRDs/examples/improve-bc-auth.md`**: Auth system improvements example

### üìã PRD Sections to Complete

#### **Project Overview Section**
- **Be specific and detailed** about the project/feature purpose
- **Include technical requirements** and constraints
- **Define expected behavior** clearly
- **Avoid vague descriptions** like "create a scraper"

#### **Examples Section**
- **Reference existing examples** in the `examples/` folder
- **Explain how to use examples** as inspiration, not for direct copying
- **Identify specific patterns** to follow

#### **Documentation Section**
- **Include official documentation URLs** for APIs and libraries
- **Add additional resources** like GitHub repos, Stack Overflow posts
- **Specify versions** of libraries if relevant

#### **Technical Considerations**
- **List specific technical requirements** (rate limits, authentication, etc.)
- **Include security considerations** where relevant
- **Mention UX requirements** if applicable
- **Document known gotchas** that AI assistants often forget

#### **Success Criteria Section**
- **Define specific functionality metrics**
- **Include quality criteria** (tests, documentation, etc.)
- **Specify performance metrics** if applicable

## üîç PRD Analysis

### Key Questions to Consider
1. **Is the description sufficiently specific?**
2. **Have all relevant examples been included?**
3. **Is the documentation complete and up-to-date?**
4. **Have all edge cases been considered?**
5. **Are the success criteria measurable?**

### PRD Validation
- **Verify that the project/feature is feasible** with available technologies
- **Confirm that referenced examples** exist in the project
- **Ensure that documentation** is accessible and up-to-date
- **Validate that success criteria** are achievable

## üìã Refinement Process

### Suggested Improvements
- **Add more details** if the description is vague
- **Include additional examples** if relevant patterns are missing
- **Expand documentation** if there are information gaps
- **Clarify success criteria** if they are not specific

### Clarification Questions
- **Are there time or resource constraints?**
- **Are there dependencies** with other features?
- **Are there specific compatibility requirements?**
- **Is integration required** with existing systems?

## üéØ Best Practices

### Writing PRDs
- **Use precise technical language** but understandable
- **Provide sufficient context** to understand the problem
- **Include usage examples** when possible
- **Specify constraints** and limitations clearly

### Information Organization
- **Group related information** in logical sections
- **Use lists and tables** for structured information
- **Include direct links** to external resources
- **Maintain consistent formatting** with the rest of the project
description:
globs:
alwaysApply: false
---
